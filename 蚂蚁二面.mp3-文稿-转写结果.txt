蚂蚁二面.mp3
说话人1 00:00
你先说说我看你是在唯品会转的，
说话人2 00:05
之前在唯品会
说话人1 00:08
之前在唯品会是什么意思？
说话人2 00:11
现在在找别的机会之前是实习。
说话人1 00:16
你现在还没有正式入职一家公司吗？对
说话人2 00:21
是的，
说话人1 00:23
 Ok，所以说你现在还是校招，
说话人2 00:26
但是我可能错过校招的时间了，

我是今年1月毕业的，
说话人1 00:35
1月毕业为什么是在唯品会是实习？
说话人2 00:39
因为当时我实习经历没有项目经历，我说实习一下就更好找正式的工作，
说话人1 00:49
是这样子的是吧？

对ok，所以你现在也不在唯品会。
说话人2 00:54
对
说话人1 00:56
ok先说说你认为可能会做一些事，或者说一些项目经验经历之类的。
说话人2 01:03
好的，我先做个自我介绍。尊敬的面试官您好，我叫吴一成，非常荣幸有机会参加贵公司的面试，我本科毕业于长安大学主修物联网工程专业，研究生毕业于波士顿大学，主修计算机信息系统，获得过两次学校的一年奖学金。研究生阶段主要学习过Java语言数据库，基于Python的数据科学，html css，JavaScript相关知识和计算机网络的相关课程。

软件开发方面，研究生使用过Python，使用过JavaScript，使用过Java，技术栈，主要是Java方面的。

今年1月到5月，我有幸在唯品会参加后端开发的相关工作，主要负责的是规则引擎的开发。然后我们这个规则引擎设计的目的就是把复杂多变的业务规则从硬编码里解放出来，然后用规则脚本的形式存储在文件或者数据库里面，然后这种设计方式就可以显著地提高系统的灵活性，然后让规则的变更不需要修改代码就可以完成，然后就加快了业务的响应速度。

然后在这个过程中，我负责了规则引擎的设计和开发，然后还参与了需求分析，系统架构等一些工作。

然后通过这段经历，我深入的了解了Java语言在大规模项目中的应用，同时我成功实现了规则组合、规则提示、业务回调、版本管理等一些功能，确保系统在实际运行的过程中可以稳定运行。然后这段工作经历让我积累了宝贵的经验，不仅提升了我的技术能力，还增强了我的团队协作和问题解决，还有项目管理等方面的能力。

然后我学会了如何在高压环境下保持专注，然后如何高效的和团队成员沟通，然后怎么应对开发过程中的各种挑战。以上就是我的详细情况，感谢您抽时间了解我的背景和经验。
说话人1 03:20
Ok我问你问一些问题，你4个月都是做这个规则引擎的开发。
说话人2 03:28
是的，
说话人1 03:30
具体什么工作能讲一下
说话人2 03:35
我们规则引擎，我主要做了，因为规则引擎这是一个很大的模块，它分成了三个大模块，然后18个小模块，然后我只负责了里面的一部分有有规则规则配置，然后有规则测试，然后业务回调，然后有版本管理，然后还有规则的解析，还有规则的动态加载，就是这些部分的内容。
说话人1 04:10
 Ok然后有上线吗？
说话人2 04:18
有的。
说话人1 04:20
你当时考虑了容量吗？比如说性能什么之类的一些东西，可能有多少规则？
说话人2 04:30
我们规则不是由我们来配置的，我们只是用来写一个规则，他从前面传过来，然后我们会把归他传过来这个东西进行一些解析，然后把解析的东西进行一些解析成一个可执行文件，然后把这个文件就是生成一个可执行文件，然后通过这些来把规则成功的部署到服务器里面。
说话人1 05:02
 Ok你这边只是去做执行车，不涉及到存储，还有规则的编写存储之类的一些东西。
说话人2 05:15
对编写不是由我们来的编写，是由其他业务人员来自己配置的。
说话人1 05:20
Ok你这边主要就是规则的一些管理跟调用又回掉。
说话人2 05:33
是的。
说话人1 05:35
有没有考虑过一些什么异常情况或者说一些容错？
说话人2 05:41
请问是哪一部分？从我的负责的工作里面
说话人1 05:52
对你做的一些工作里面，
说话人2 05:56
我想想他我做的版本管理的一个功能里面，它会有一些问题。

然后比如它有一个因为它可以迭代不同的版本，然后我们就会有一个并发修改的问题，然后我们就会有比如说有多个用户同时基于一个版本进行修改规则，a提交了之后b又提交了，然后就会导致a的数据被覆盖。

然后我们的策略就是在插入数据之前，先从数据库查一次最新的版本号，如果高于本次提交的版本的话就不执行插入，如果不高于的话就执行插入，然后因为这个是这个方案其实也有一些问题，但是我们它的并发度不高，所以我们写的这么个逻辑。
说话人1 07:00
 Ok你说的问题是什么问题？可能的问题
说话人2 07:09
就是比如说在插入数据之前，先从数据库查一次新的版本号码，然后这个时候判断它如果是当前版本，如果在这中间它又来了一条就插入了，查完数据之后他又查了一次版本号，他就会又有并发修改的问题，
说话人1 07:30
有什么办法解决？

如果说我们是要支持一个比较高频的操作的话，有这种场景的话，如何解决这种问题？
说话人2 07:41
如果对这种一致性要求比较高的话，我想应该用锁来解决比较好，
说话人1 07:50
比如说你要使用锁解决，你会怎么样去解决？
说话人2 07:54
比如把插入数据和查询数据合起来，它就是相当于侠锗当于是一个事物，然后就把这两个操作合起来加一把锁，然后当成一个临界资源，然后别的县城就没有办法进来了。
说话人1 08:12
 Ok就是一条出口还是一个事物，反正都行是吧？
说话人2 08:21
都可以。
说话人1 08:22
Ok或者你说一下你在这里面你觉得做的比较好的一个点，选一个点，或者说是自己觉得做的还不错，有点成就感。
说话人2 08:38
我做的也比较有限，但是我觉得他我感觉最好的一个点，这个项目里面最厉害的一个点，我感觉就是一个规则的动态解析，然后他我们朱老师我们的规则引擎他叫朱老师，然后朱老师他的条件判断它是依赖于Java里面的实体类里面的属性和属性值来实现的。

然后比如他有一个年龄大于20，然后身高大于180的这么一个条件，然后他在joss里面就可以表现为 person，然后括号，然后里面是 a值大于20，然后height大于180。

然后如果要做到这些的话，首先需要一个user的实体类，但是实体类它里面要有age和height这两个属性，但是这个时候就有问题了，因为我们的业务它是在随时变化的，它如果新增的就是条件不能满足不在我们现在有的实体类里面，那么这个条件约束它就会失效。

然后比如就在刚才的年龄和身高后面再加一个体重的条件，然后它原本的user类里面它没有属性，然后我们可能就要修改实体类，然后重新发布，然后这样就会导致每次有新增的字段都会去修改实体类，然后重新发布。

然后它的扩展性就很差，然后它也不优雅。

然后为了解决这个问题，然后我们就会从支持的表达式类型来出发，然后每个表达式都可以跟Java里面特定的类型和方法结合起来，比如我们有一个有三个解析类，一个是integer pass，然后一个是set pass，还有一个是stream pass，然后我们可以根据传进来的因子条件来选择，是由哪是一个解析类来完成这个解析。

然后比如刚才现在就没有限制条件了，比如传进来一个条件是还是年龄和身高，然后这个时候我们就会有一个比如integer pass解析类来完成解析，它就会解析成一个年龄字段，一个属性字段，还有一个一个表达式字段，然后我们会根据解析的结果把它拼接成一条具体的规则。

然后还有一个是比如 set pass，我们它可能传过来的数据有浏览器类型，然后包括然后属性 chrome，然后我们可能还会有一个表达式，是con contest或者是其他的，然后浏览器肯定是chrome的话就同意访问，然后我们就会通过这些不同的解析类来完成这些这些因子的解析，然后通过有限的基础解析来满足无限的因子扩张。
说话人1 12:29
所以就是相当于你简单的说就是说，其实你是动态的去支持这种财富的这种产品，
说话人2 12:42
能理解吗？

是的，就是相当于类似一个工厂模式，我们把这个规则丢进去，然后它就会输出对应的条件。
说话人1 12:55
是，然后你现在是在哪个城市？
说话人2 13:06
我现在
说话人1 13:09
在
说话人2 13:10
对
说话人1 13:10
上海是唯品会的。
说话人2 13:12
不我离职了，我之前是在天津的唯品会。
说话人1 13:18
唯品会天津， Ok，你当时你是回国吗？还是怎么的？
说话人2 13:27
对，我是回国。
说话人1 13:29
 Ok，你回国的话是直接去了天津那边去，对
说话人2 13:32
是的，
说话人1 13:33
你是家里是哪里的？
说话人2 13:34
我家里是乌鲁木齐的，但是老家是江苏的，

所以你
说话人1 13:42
是祖籍江苏，但是你
说话人2 13:44
对我亲戚江苏这边比较多。
说话人1 13:48
Ok，所以他怎么跑到那边去实习的？
说话人2 13:53
找到那边了，然后就到那边去了。
说话人1 13:57
你熟悉比如说京津地区
说话人2 14:01
不熟悉，好，
说话人1 14:04
然后 Ok为什么比如说你1~1月份到5月份，其实也算是一个比较早那种校招实习的一个阶段，为什么没有考虑在那边留在那边，
说话人2 14:23
我个人是偏向向江浙沪这边发展。

然后请问我们蚂蚁金服应该是在杭州，
说话人1 14:33
对我们在杭州，
说话人2 14:35
对我个人偏向是往江浙沪发展，然后我老家是江苏的，然后想的离这边近一点。
说话人1 14:43
Ok，所以乐东为什么去天津去什么实习，
说话人2 14:48
那个是实习，然后当时说可以
说话人1 14:51
有机会就去了是
说话人2 14:52
吧？对，当时说是有机会在广州那边转正，但是到结束的时候也没有广州那边说没有HC了，可以在天津那边转正。
说话人1 15:04
Ok，所以说还是打算江浙沪
说话人2 15:09
对
说话人1 15:09
长三角这边。然后我看你是在国外读的计算机的研究生是的， ok，当时有怎么没有考虑在那边留下，还是有什么原因吗？
说话人2 15:31
家里人身体不好，而且从22年开始，国外也不招人了，就是不怎么招人。

我去的那一年我找实习的时候，他们刚好不招实习生，然后我毕业的时候他们开始招实习了，但是不招正式员工，
说话人1 15:51
所以就阴差阳错
说话人2 15:54
的对，所以就全部错过了。
说话人1 15:56
然后我印象中到2023年之后疫情。
说话人2 16:02
对，22年二三年很多的。您说
说话人1 16:07
很多都是远程。
说话人2 16:10
是的，
说话人1 16:10
远程在家对。 Ok，所以后面两年才过去，
说话人2 16:16
是的，我就在美国待了两年差不多。
说话人1 16:21
待了两年ok，然后你你的奖学金是在那边拿的吗？还是说对
说话人2 16:29
在国外拿的。他是他奖学金是激励机制相当于把学费覆盖掉了。
说话人1 16:40
 Ok明确这样ok。

然后你刚才说你主要是你的技术特长是Java还是对？
说话人2 16:53
我技术栈主要是Java方向的，然后研究生阶段学的前端，然后还有包括拍照，现在已经忘得差不多
说话人1 17:05
了， ok。然后我看到你这边数目的卖的是瑞德是卖生活靠不靠谱，你哪些东西比较熟，这些东西有一点什么生活卡不卡，这中间的东西
说话人2 17:26
都了解一些。
说话人1 17:32
 Ok我大致随便挑几个问一下，因为这是你们用在干做什么都有的，
说话人2 17:40
它radius是用来保存一些数据的，就是把这些规则放到radius里面，然后等有业务系统过来调用我们。

我先讲一下我们的流程，我们做了一个服务拆分，然后他会从前端配置一些规则，然后等规则配置完了之后，它就会丢到 release里面，然后等业务系统过来触发的时候，就会触发 release里面的和数据库里面的就是规则，然后
说话人1 18:13
我要了解到底是解决什么问题呢，我可以保持数据库不完事，
说话人2 18:18
数据库太慢了，然后我们放到release里面，它能加快，因为它是一个内存操作，然后他就能
说话人1 18:29
 ok，但是我可能是一个慢速系统，其实没有那么你们有很高的要求吗？

还是？
说话人2 18:35
因为它这个规则引擎它是对接了很多业务系统，它可能会有慢速的，可能会有快速的，然后我们就要满足，就都满足的话就要要用一个rds
说话人1 18:49
后面丢数据了。
说话人2 18:51
一般不会，因为它每个规则都比较少，
说话人1 18:58
不是我是说是内存在内存里面恶化了，他们丢数据了。
说话人2 19:04
我们没有遇到过这种情况，
说话人1 19:08
不会存在这种情况吗？
说话人2 19:11
会存在，但是我们之前设计的时候没有考虑这方面，然后我们瑞迪斯还还实现了分布式锁，它可能是有好几个服务器，然后它版本很多，然后它每个版本一直迭代，它可能有1~100个版本，但是有这么多版本它冗余了它就很不好，然后我们就会有一个通过定时任务去进行一个rise的分布式，就是删除，
说话人1 19:54
怎么个分布式删除
说话人2 19:56
法，就是分布式通过分布式锁来实现一个版本的删除，因为它能不能是个服务器就删它，首先要拿到锁，要不然就重复删除了。
说话人1 20:13
要做操作的时候，
说话人2 20:15
对，
说话人1 20:16
所以你有很多个操作的进程，然后检查到这个时候，然后才能干这个事儿。
说话人2 20:22
对，因为它有好几个服务器，然后对
说话人1 20:29
 Ok，我们搜狗在这里面主要毫无疑问事业部是吧？你们体量是多大，你的数据量有多大，你的访问频度有多高？
说话人2 20:44
Qps应该是在整个集群应该是在每台是7q ps我记得是，然后整个集群的话30左右，
说话人1 21:00
你说的是生产还是说你们线下开发的时候？
说话人2 21:04
线下
说话人1 21:06
线下肯定少。
说话人2 21:08
对，是
说话人1 21:09
327都很高了，
说话人2 21:11
都
说话人1 21:12
生产能到多少？
说话人2 21:14
生产的不对，这是生产数据。

生产数据你了解吗？
说话人1 21:23
你们上线了吗？你不得关注一些性能，
说话人2 21:25
对上线了，生产是我记混了。

Ok我就记得他不高，
说话人1 21:34
 Ok，个位数的这种图片， ok，那有点问题，就是说这个规则引擎它主要是对哪些业务服务？
说话人2 21:46
我们我记得它是有连了4有很多，但是是我还在的时候他就连了，比如有风控系统，然后有积分系统，然后有告警系统。
说话人1 22:07
 Ok我理解这套东西主要是给人用的，所以说它不高，没
说话人2 22:13
这么理解吧？用户录入的。对，它是用户录入的，然后规则来匹配的内容。对，
说话人1 22:23
比如说你们的技术人员或者业务人员。
说话人2 22:25
对是的是吧？
说话人1 22:27
对ok，那问题来了，这个就是在你看来这个东西如果我的刚才你也说了，你刚才加了个瑞杰斯是吧？对卖社保几个QS，是不是你对这个系统的看法，比如说你来设计，如果说我们想做的比较简单，然后好维护的话，你会看这个东西，或者说你觉得哪些东西是可有可无，或者说它其实也是必要的，但是是有一些理由的，你的观点怎么样？

对
说话人2 23:09
我认为 Rise它是必须的，因为它后面他如果再接更独盏统的话，他可能qps就会更大。然后
说话人1 23:19
你认为多大是需要一个 really是
说话人2 23:24
我不太确定，因为我才没有在真实的场景里待多久。
说话人1 23:29
Ok比如说你概念上我说一下什么，比如说我没事给我办这个东西，外收口的一般的这种我们常用的一些收口，比如说简单的一些收口，比如10来克我的不对的操作的话，一般来讲我们的时间是多长？

比如说操作意识的话，比如说它是一个没有什么特别的一个很复杂的查询，
说话人2 23:59
应该是在100毫秒以内，
说话人1 24:04
100毫秒以内
说话人2 24:07
 risk可能是它的1/10，
说话人1 24:13
10个毫秒
说话人2 24:15
可能是的。
说话人1 24:17
 Ok你也知道你说100毫秒以内可能就是十几十毫秒的话，你现在是7新qbs
说话人2 24:27
对，
说话人1 24:28
所以说你们可能涉及到非常大的一个容量。
说话人2 24:33
对是的，因为它会有红分。每天会有峰值，峰值没有峰值。对，按三倍来计算的话，每台是21，然后每台差不多是21 20 20的QS，
说话人1 24:54
20
说话人2 24:55
20也没有什么关系，我们为了不让它崩掉，
说话人1 25:00
它也不会崩，你刚才说的是响应的时间是吧？

然后其实你的容量，它卖车口的容量可不是跟响应时间有关系，
说话人2 25:10
我不太了解。

好像是
说话人1 25:18
换一个问题，比如说你们系统的要求的，对于这种或者是说业务这一侧的这种怎么讲这种流畅度或者说响应时长或者说什么之类的，是有一些要求吗？还是什么？
说话人2 25:48
这个是的，有些系统它可能会有要求，但有些系统就没有要求，为了满足全部的需求的话，我们就会加一些比如reds，
说话人1 26:01
 Ok，然后还有没有什么，比如说卡不卡是用来做。
说话人2 26:08
对，因为我们做了一个服务拆分，然后他从管理态到运行态管理态就是前端人员来配规则的，然后运行态就是我们去进行一些规则解析，然后规则匹配，执行这些的，然后我们从前端传规则传到后面来，我们就要用就要用一个消息队列，因为我们也考虑过HTTP，然后它HTTP主要是我们业务上有是业务上的原因，然后运行态它因为要加载到内存，然后它更多的是一个内存服务器，然后我运行态是一个集群，然后我用HTTP就会用一个问题，它只会把请求打到某一台机器上，然后其他机器还是老数据，然后如果这个时候有一个业务过来请求的时候，打到了没有被加载的机器上面，那数据可能就不一致了，所以我们用卡夫卡的一个广播的能力
说话人1 27:24
ok ok所以卡夫卡是主要是为了解分布式的问题。
说话人2 27:29
是的。
说话人1 27:32
Ok所以如果说让你设计的话，你觉得这几个还是很必要的。
说话人2 27:39
对，我觉得还是必要的，因为它有数据不一致的问题。
说话人1 27:43
有没有别的思路？比如说我也想做一个这个东西，但是我有些东西我换个思路去做，

开放式的随便看你的想法。
说话人2 27:57
根据我的就是我了我学到的知识，我觉得可能会有叫什么两阶段提交，可能会使用一个两阶段提交来解决这个问题。

发到集群上的时候先进行一次操作，但是不提交，然后并且生成一个日志，然后等等等大伙都准备好了，然后有一个协调者，协调者再通知各方，再通知各方你就可以提交了，然后这个时候再来提交，然后这个时候如果有服务器它失败了，那就进行一次回滚，根据日志来进行回滚。
说话人1 28:59
 Ok。对你这做两年的主要是解哪个问题，我没理解你是要解哪个问题，
说话人2 29:08
就是数据一致性的问题，
说话人1 29:10
一致性的问题，这样做会不会更复杂，
说话人2 29:17
对这样做就太复杂了，所以这是我的思路，只是一个思路。
说话人1 29:22
所以我们再大一点就是说对于一个规则引擎来讲的话，比如说你自己想设计这个东西的话，你会去怎么做？

比如说我也想做一个类似这种规则引擎，可能会考虑怎么样去实现，
说话人2 29:43
我要实现首先会考虑它的使用场景，然后他可能会存在什么问题，然后考虑一下它规则的数据结构和存储方式，就是因为我们之前规则那个因子，它可能一条规则可能是有好几个因子来拼成的，然后我们之前可能是用一个链表来实现，但是这个可能有点复杂，然后我们就换成了动态解析，

然后存储方式，然后还有接口的设计，然后包括去实现规则引擎的执行逻辑，然后触发动作，就这方面。

然后还有规则引擎，它和其他系统是怎么交互的，通过API或者通过 HTTP或者通过mq是怎么通信的，我可能会从这些方面来考虑。
说话人1 30:50
然后你这边除了管理上你还有运营的，你相当于你还会做各种业务的一些逻辑判断，我理解刚才大部分说的是这种，比如说你运营人员入住了，然后你生成这个规则，对，是吧？但是这个东西生成了以后，实际上它要执行去做这种判断是吧？对我理解其实你的服务的量应该不小。
说话人2 31:24
是的。因为我们是刚刚做这个东西，所以一开始的对。就是他不
说话人1 31:32
太多。还没上来是吧？
说话人2 31:36
对，就一开始属于一个初级阶段初步阶段。
说话人1 31:40
 Ok，然后你自己你自己未来比如说你自己想做哪方面哪一个领域的一些问工作，然后自己有没有一些规划？
说话人2 31:55
我其实都想做，包括包括前端，包括Java，包括c加加什么的，但是我感觉这不太现实，因为要学的东西太多了，所以我自己的规划可能就是
说话人1 32:15
全栈工程师对全站公司领域我其实技术上是一方面，哪个领域的，比如说我想做一些业务拼业务的，就是我们面对一个终端用户的这种实现，还是说做一些这种后台的，还是说一些基础服务，还是说更比如中间这些东西，或者是一些服务平台内部的一些平台，还是说做更底层的，比如说调度，比如说国内历史，然后网络相关的这种东西领域方面，你自己有没有一些
说话人2 33:05
领域方面，因为我都没有接触过我初步的想法终端。

对偏业务，然后底层的话了解一下，包括计算机网络，然后是底层是怎么通信的，然后再加上包括前端，然后这样就可以构成一个比较完整的知识体系，然后我就可以自己的去做一些东西，然后就可以自己实现一些东西，就不用找别人。
说话人1 33:42
Ok，然后现这几年不是AI比较火，AI相关的东西有没有一些接触跟了解？
说话人2 33:51
上过数据。对，他上一次就是上过数据科学，就是基于Python的数据科学课，
说话人1 34:02
 Ok，
说话人2 34:03
然后其他的就不是很了解了，
说话人1 34:07
比如说大火的lm这种大圆模型这些东西有没有去接触过或者
说话人2 34:13
没有接触过，但是如果后期有需要的话，我肯定也会去学，因为我觉得我不满足于自己现有的知识，就是知识容量可能会去学更多的东西。
说话人1 34:32
好的，你有什么问题你可以随便问一下，我能答的我就回答一下。
说话人2 34:40
好的。请问一下蚂蚁我们部门主要是做什么业务的，然后用到的技术栈有哪些？
说话人1 34:50
Ok我上一个面试官没有给你提到这些，

反正我简单说一下，我们是研发效能部，延误效能，我不知道你有没有这种了解唯品会，应该也有类似的这种部门，就是简单说就是该boss相关的这些东西，简单说
说话人2 35:14
好的，
说话人1 35:15
 Demo是相关的，但是我说到研发效能，其实这个领域更大一点，但其实是我们整个部门负责研发同学所有的他们在开发的过程中相关的一些工具平台能力，相关的一些提供给他们做支撑。
说话人2 35:36
好的，我包括就只是
说话人1 35:39
一块东西，然后是说我们是比较接触比较多的一个csd的东西，大概是这样，然后我们这边从代码库就是类似于哈姆这样的东西，但是我们蚂蚁的内部的一套东西，把代码库的一个管理，然后到这种开发工具，我们其实有自己的科ID一 ID一的这种产品，云端研发的这种产品，就是你用 idea是吧？ Idea我们其实就云端的这种idea打开即用。
说话人2 36:21
了解。
说话人1 36:22
对，然后这只是一部分，其他的我们常见的比如说构建，然后我们的这种ci的这种整个的部署 Cd的，然后还有很多的这种研发的质量的风控，这种很多非常多的东西。

好的，所以它是一个大的领域，然后我们这个组主要是负责持续集成与环境持续集成的话，就好理解就是ci
说话人2 36:52
好的
说话人1 36:53
Tei相关的这种东西，然后还有环境比较特殊了，一般的公司它可能没有一个独立的这种用组去负责，但是蚂蚁的体积比较大，然后互相之间的依赖比较多，然后它的应用规模也相对比较大，需要有一个团队去专门去支撑跟维护整个的研发环境。

大概讲我们来做支撑的话，说具体一点就是可能整个的这种他们如何上万的这种开发工程师，怎么在一套环境里面能够尽量不互相打扰的完成自己的开发工作。那么大家都知道，如果说一套环境互相依赖的话，比如说一套微服务体系，大家互相依赖的话，我我在里面开发的话，反正互相打架
说话人2 37:45
了，对。
说话人1 37:46
本来都好好的是吧？你下一次突然间那边更新了一个什么东西，我这边就跑不出来。
说话人2 37:53
对是的，但是
说话人1 37:53
我们怎么样去避免他们的这种做隔离，怎么样去让他们
说话人2 37:59
了解了
说话人1 37:59
好好的做开发，大概这样的一些东西，其实底下的技术档案主要的开发语言还是要，但是我们也会有一些波浪的东西，还有也有一部分拍摄的东西，然后然后涉及到的其实比较多的，现在也基本上都是国内技术延伸的一些东西。多可古雷历史这些东西。好
说话人2 38:30
的，了解了。

好的，感谢解答，我还有如果我能入职的话，请问有前辈来指导吗？
说话人1 38:43
肯定有的，我们都有师兄体制体系的，就是进来的话肯定是有一个比较资深的一个同学来带，包括工作上面，包括整个的一些知识体系方面，包括整个做的一些非常细的一些具体的工作点，然后目标什么都会有指导，然后公司的整体的话也会有比较完善的这种培训体系，就是自动化会有很多的这种投产的培训。
说话人2 39:21
好的，了解
说话人1 39:25
了，ok
说话人2 39:26
还有我什么时候能知道这一轮面试的结果，
说话人1 39:33
我不知道是不是有一个正常的反馈渠道，我这边应该是不会透露的。对，然后但是我不知道会不会有其他的这种渠道。对，
说话人2 39:49
我怎么才能知道我这轮结面试的结果，
说话人1 39:53
好像应该之前你是跟hr有联系吗？
说话人2 40:02
是和上一个面试官应该是。
说话人1 40:07
好勒，一般来讲一段时间不联系，一般就没有什么。
说话人2 40:13
好的，请问大概是多久？
说话人1 40:17
不好说，我也第一次碰到这种问题，我都不知道怎么回答这个东西，对，但一般来讲的话，一一一周之内会有连续说下一轮，一般来讲
说话人2 40:35
好的
说话人1 40:37
ok，
说话人2 40:41
请问如果有一下一轮面试的环节是什么？
说话人1 40:49
如果下一轮那就是面面试的环节是什么？
说话人2 40:53
是什么面技术面
说话人1 40:58
吗？偏技术，对技术面
说话人2 41:01
还是技术面？
说话人1 41:03
对。
说话人2 41:03
请问一下我这是一面还是二面？
说话人1 41:07
二
说话人2 41:08
面好的，
说话人1 41:10
这是二面，之前不是面过
说话人2 41:12
了吗？对是的。
说话人1 41:15
对，而且还做了笔试
说话人2 41:17
吗？
说话人1 41:20
对，
说话人2 41:21
好像做了一个
说话人1 41:24
对。你是在面很多家是
说话人2 41:27
吧？对
说话人1 41:29
好吧，对你上二面，然后通常是4面，最后一轮是hr，
说话人2 41:36
下一轮也是技术，
说话人1 41:39
面对下一轮也是技术面。
说话人2 41:41
好的，请问下一轮是面项目还是面8股？

什么还是都面？
说话人1 41:51
不好说，要看面试官的一些问题，看具体情况了，没有什么很形式化的东西。
说话人2 41:59
好的，了解了。我这边没什么问题了。
说话人1 42:05
行，我们今天先聊着，好的。
说话人2 42:09
谢谢面试官
说话人1 42:10
辛苦
说话人2 42:11
了，谢谢面试官也辛苦了，好的。
说话人1 42:14
不客气好

拜拜。
